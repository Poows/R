xyplot(Metascore ~ Release, data = data, auto.key = list(space = 'right'),
groups = countries,
ylab = 'Рейтинг фильма',
xlab = 'Дата выхода фильма',
main = 'График разброса рейтинга от даты выхода фильма')
dev.off()
fileURL <-"http://comtrade.un.org/data/cache/partnerAreas.json"
reporters <- fromJSON(file =fileURL)
is.list(reporters)
reporters <-t(sapply(reporters$results, rbind))
dim(reporters)
reporters <-as.data.frame(reporters)
head(reporters)
names(reporters) <-c('State.Code', 'State.Name.En')
reporters[reporters$State.Name.En =='Russian Federation', ]
source("https://raw.githubusercontent.com/aksyuk/R-data/master/API/comtrade_API.R")
for(i in 2010:2020) {
Sys.sleep(5)
s <-get.Comtrade(r = 'all', p = "643", ps = as.character(i), freq = "M",rg = '1', cc = '0207', fmt= "csv")
file.name <-paste('./data/comtrade_', i, '.csv', sep ='')
write.csv(s$data, file.name, row.names =F)
}
df <- read.csv('./data/comtrade_2010.csv', header = TRUE, sep = ',')
for (i in 2011:2020){
# Считываем данные из .csv файла
df.temp <- read.csv(paste('./data/comtrade_', i, '.csv', sep=''), header = T, sep=',')
# Заполняем основной дата фрейм
df <- rbind(df, df.temp)
}
df
df$Netweight..kg.
df$Year
df$Classification
df$Period
df$Trade.Value..US..
df
df$Mode.of.Transport.Code
df$Aggregate.Level
df
df[, ]
df[, 1]
df[, 0]
df
df[, 2]
df[, ]
df[, c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 23, 24, 31, 33, 36)]
df[, c(2, 4, 10, 30, 32)]
df[, c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 23, 24, 31, 33, 36)]
df[, c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 23, 24, 31, 33, 35)]
df[, c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 24, 31, 33, 35)]
df[, c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 35)]
df[, c(2, 4, 5, 6, 7, 8, 9, 10, 35)]
df[, c(2, 4, 5, 6, 7, 8, 9, 10)]
df[, c(2, 4, 8, 9, 10)]
df[, c(2, 4, 10)]
df[, c(2, 4, 10, 30)]
df <- df[, c(2, 4, 10, 30, 32)]
df
df[, Netweight..kg.]
df[, "Netweight..kg."]
df[, is.na("Netweight..kg.")]
df[, is.na(Netweight..kg.)]
df[, is.na(Netweight..kg)]
df[, is.na(df$Netweight..kg.)]
is.na(df$Netweight..kg.)
df[, round(mean(.SD$Netweight..kg., na.rm = T), 0)]
install.packages("stringr")
install.packages("gridExtra")
install.packages("data.table")
library('ggplot2')
library('rjson')
library('dplyr')
library('lattice')
library('stringr')
library('gridExtra')
library('data.table')
data <- read.csv('./data/DF_movies.csv', header = T, sep = ',')
df[, round(mean(.SD$Netweight..kg., na.rm = T), 0)]
df <- read.csv('./data/comtrade_2010.csv', header = TRUE, sep = ',')
for (i in 2011:2020){
# Считываем данные из .csv файла
df.temp <- read.csv(paste('./data/comtrade_', i, '.csv', sep=''), header = T, sep=',')
# Заполняем основной дата фрейм
df <- rbind(df, df.temp)
}
df
df <- df[, c(2, 4, 10, 30, 32)]
df[, round(mean(.SD$Netweight..kg., na.rm = T), 0)]
df[, Netweight..kg.]
df[, .SD]
df[, .SD$Netweight..kg.]
df[, is.na(Netweight..kg.)]
df[, round(mean(.SD$Netweight..kg., na.rm = T), 0), by = Year]
df <- df[, c(2, 4, 10, 30, 32)]
df <- read.csv('./data/comtrade_2010.csv', header = TRUE, sep = ',')
for (i in 2011:2020){
# Считываем данные из .csv файла
df.temp <- read.csv(paste('./data/comtrade_', i, '.csv', sep=''), header = T, sep=',')
# Заполняем основной дата фрейм
df <- rbind(df, df.temp)
}
df
df <- df[, c(2, 4, 10, 30, 32)]
df[, round(mean(.SD$Netweight..kg., na.rm = T), 0), by = Year]
df[, round(mean(.SD$Netweight..kg., na.rm = T), 0), by = "Year"]
df
df[, round(mean(.SD$Netweight..kg., na.rm = T), 0)]
df
df[, Netweight..kg. :=as.double(Netweight..kg.)]
df <- df[, Netweight..kg. := as.double(Netweight..kg.)]
df <- df[, "Netweight..kg." := as.double(Netweight..kg.)]
df[, round(mean(.SD$Netweight..kg., na.rm = T), 0)]
.SD$Netweight..kg.
df[, .SD]
library('ggplot2')
library('rjson')
library('dplyr')
library('lattice')
library('stringr')
library('gridExtra')
library('data.table')
install.packages("data.table")
library('ggplot2')
library('rjson')
library('dplyr')
library('lattice')
library('stringr')
library('gridExtra')
library('data.table')
df <- read.csv('./data/comtrade_2010.csv', header = TRUE, sep = ',')
for (i in 2011:2020){
# Считываем данные из .csv файла
df.temp <- read.csv(paste('./data/comtrade_', i, '.csv', sep=''), header = T, sep=',')
# Заполняем основной дата фрейм
df <- rbind(df, df.temp)
}
df
df <- df[, c(2, 4, 10, 30, 32)]
df[, .SD]
df[, round(mean(.SD$Netweight..kg., na.rm = T), 0)]
df <- data.table(df)
df
df[, .SD]
df[, round(mean(.SD$Netweight..kg., na.rm = T), 0)]
df[, round(mean(.SD$Netweight..kg., na.rm = T), 0), by = Year]
df <- df[, Netweight..kg. := as.double(Netweight..kg.)]
df[, round(mean(.SD$Netweight..kg., na.rm = T), 0), by = Year]
df
df <- read.csv('./data/comtrade_2010.csv', header = TRUE, sep = ',')
for (i in 2011:2020){
# Считываем данные из .csv файла
df.temp <- read.csv(paste('./data/comtrade_', i, '.csv', sep=''), header = T, sep=',')
# Заполняем основной дата фрейм
df <- rbind(df, df.temp)
}
df_test <- df
df <- data.table(df)
df_test
df <- df[, c(2, 4, 10, 30, 32)]
df <- data.table(df)
df_test <- df
df
df_test
df <- read.csv('./data/comtrade_2010.csv', header = TRUE, sep = ',')
for (i in 2011:2020){
# Считываем данные из .csv файла
df.temp <- read.csv(paste('./data/comtrade_', i, '.csv', sep=''), header = T, sep=',')
# Заполняем основной дата фрейм
df <- rbind(df, df.temp)
}
df <- df[, c(2, 4, 10, 30, 32)]
df_test <- df
df <- data.table(df)
df
df_test
df[, round(mean(.SD$Netweight..kg., na.rm = T), 0), by = Year]
df[, Netweight..kg..mean := round(mean(.SD$Netweight..kg., na.rm = T), 0), by = Year]
dr
df
df[, !is.na(Netweight..kg.), Netweight..kg..mean := Netweight..kg.]
df[!is.na(Netweight..kg.), Netweight..kg..mean := Netweight..kg.]
df
df[is.na(Netweight..kg.), Year, Netweight..kg..mean]
df[Trade.Value..US..]
df
df[is.na(Trade.Value..US..)]
df[is.na(Trade.Value..US..), Year]
df[!is.na(Netweight..kg.)]
df[is.na(Netweight..kg.)]
df[is.na(Netweight..kg..mean)]
new.df <- data.frame()
new.df
df
df_test
df
df <- read.csv('./data/comtrade_2010.csv', header = TRUE, sep = ',')
for (i in 2011:2020){
# Считываем данные из .csv файла
df.temp <- read.csv(paste('./data/comtrade_', i, '.csv', sep=''), header = T, sep=',')
# Заполняем основной дата фрейм
df <- rbind(df, df.temp)
}
df_test <- df
df <- df[, c(2, 4, 10, 30, 32)]
df_test
df
df[, Year]
df <- data.table(df)
df[, Year]
df[, Year, Reporter]
df[, c(2014), Reporter]
df[, c(2014, 2015), Reporter]
df[, Reporter]
df[, Reporter, Year]
df_test
df_test[, "Flag"]
df_test[, "Partner"]
new.df <- rbind(new.df, cbind(df[df$Reporter == 2014, ]))
new.df
new.df <- rbind(new.df, cbind(df[df$Reporter == 2014, ], Counries = 'Embago'))
new.df <- rbind(new.df, cbind(df[df$Reporter == 2014, ], countries = 'Embago'))
new.df <- rbind(new.df, cbind(df[df$Reporter == 2014, ], Year = '2014'))
new.df <- rbind(new.df, cbind(df[df$Year == 2014, ], Year = '2014'))
new.df <- rbind(new.df, cbind(df[df$Year == '2014', ], Year = '2014'))
new.df
new.df <- data.frame()
new.df <- rbind(new.df, cbind(df[df$Year == '2014', ], Year = '2014'))
new.df
new.df <- rbind(new.df, cbind(df[!df$Year == '2014', ], Year = 'Other years'))
new.df
new.df <- data.frame()
new.df <- rbind(new.df, cbind(df[df$Year == 2014, ], Year = '2014'))
new.df
dim(new.df)
dim(df[Year])
dim(df[, Year])
df[, Year]
dim(df[, Year])
count(df[, Year])
dim(new.df)
new.df <- rbind(new.df, cbind(df[!df$Year == 2014, ], Year = 'Other years'))
dim(new.df)
new.df
df
new.df <- data.frame()
new.df <- rbind(new.df, cbind(df[!df$Year == 2014, ], Year = 'Other years'))
new.df
new.df <- rbind(new.df, cbind(df[df$Year == 2014, ], Year = '2014'))
new.df
new.df <- data.frame()
new.df <- rbind(new.df, cbind(df[df$Year < 2014, ], Year = '2014'))
new.df <- rbind(new.df, cbind(df[df$Year > 2014, ], Year = 'Other years'))
new.df
df[df$Year < 2014]
df[df$Year < 2014, ]
new.df <- data.frame()
new.df <- rbind(new.df, cbind(df[df$Year < 2014, ], Year = 'Countries before 2014'))
new.df <- rbind(new.df, cbind(df[df$Year == 2014, ], Year = 'Countries in 2014'))
new.df <- rbind(new.df, cbind(df[df$Year > 2014, ], Year = 'Countries after 2014'))
new.df
df <- read.csv('./data/comtrade_2010.csv', header = TRUE, sep = ',')
for (i in 2011:2020){
# Считываем данные из .csv файла
df.temp <- read.csv(paste('./data/comtrade_', i, '.csv', sep=''), header = T, sep=',')
# Заполняем основной дата фрейм
df <- rbind(df, df.temp)
}
df <- df[, c(2, 4, 10, 30, 32)]
df_test <- df
df <- data.table(df)
df <- df[, Netweight..kg. := as.double(Netweight..kg.)]
df[, round(mean(.SD$Netweight..kg., na.rm = T), 0), by = Year]
df[, Reporter, Year]
df_test[, "Partner"]
df[, Netweight..kg..mean := round(mean(.SD$Netweight..kg., na.rm = T), 0), by = Year]
df[!is.na(Netweight..kg.), Netweight..kg..mean := Netweight..kg.]
df[is.na(Netweight..kg.), Year, Netweight..kg..mean]
new.df <- data.frame()
new.df <- rbind(new.df, cbind(df[df$Year < 2014, ], Year = 'Countries before 2014'))
new.df <- rbind(new.df, cbind(df[df$Year == 2014, ], Year = 'Countries in 2014'))
new.df <- rbind(new.df, cbind(df[df$Year > 2014, ], Year = 'Countries after 2014'))
new.df <- rbind(new.df, cbind(df[df$Netweight..kg..mean], Netweight..kg..mean))
new.df <- new.df[df$Netweight..kg..mean]
new.df
new.df <- new.df[df$Netweight..kg..mean, ]
new.df
new.df <- data.frame()
new.df <- rbind(new.df, cbind(df[df$Year < 2014, ], Year = 'Countries before 2014'))
new.df <- rbind(new.df, cbind(df[df$Year == 2014, ], Year = 'Countries in 2014'))
new.df <- rbind(new.df, cbind(df[df$Year > 2014, ], Year = 'Countries after 2014'))
new.df
png('ggplot.png', width = 1000, height= 1000)
ggplot(data = new.df.countries, aes(x = Year, y = Netweight..kg..mean, group = Year, color = Year)) +
geom_boxplot() +
scale_color_manual(values = c('red', 'blue', 'green'),
name = "Группы стран-поставщиков:") +
labs(title = 'Коробчатые диаграммы суммарной массы поставок',
x = 'Страны', y = 'Масса')
png('ggplot.png', width = 1000, height= 1000)
ggplot(data = new.df, aes(x = Year, y = Netweight..kg..mean, group = Year, color = Year)) +
geom_boxplot() +
scale_color_manual(values = c('red', 'blue', 'green'),
name = "Группы стран-поставщиков:") +
labs(title = 'Коробчатые диаграммы суммарной массы поставок',
x = 'Страны', y = 'Масса')
new.df
new.df <- data.frame()
new.df <- rbind(new.df, cbind(df[df$Year < 2014, ], C_Year = 'Countries before 2014'))
new.df <- rbind(new.df, cbind(df[df$Year == 2014, ], C_Year = 'Countries in 2014'))
new.df <- rbind(new.df, cbind(df[df$Year > 2014, ], C_Year = 'Countries after 2014'))
new.df
ggplot(data = new.df, aes(x = C_Year, y = Netweight..kg..mean, group = C_Year, color = C_Year)) +
geom_boxplot() +
scale_color_manual(values = c('red', 'blue', 'green'),
name = "Группы стран-поставщиков:") +
labs(title = 'Коробчатые диаграммы суммарной массы поставок',
x = 'Страны', y = 'Масса')
dev.off()
new.df <- data.frame()
new.df <- rbind(new.df, cbind(df[(df$Year < 2014) & (df$Year > 2014), ], C_Year = '!2014'))
new.df <- rbind(new.df, cbind(df[df$Year == 2014, ], C_Year = '==2014'))
new.df
new.df <- data.frame()
new.df <- rbind(new.df, cbind(df[(df$Year < 2014) | (df$Year > 2014), ], C_Year = '!2014'))
new.df <- rbind(new.df, cbind(df[df$Year == 2014, ], C_Year = '==2014'))
new.df
png('ggplot.png', width = 1000, height= 1000)
ggplot(data = new.df, aes(x = C_Year, y = Netweight..kg..mean, group = C_Year, color = C_Year)) +
geom_boxplot() +
scale_color_manual(values = c('red', 'blue', 'green'),
name = "Группы стран-поставщиков:") +
labs(title = 'Коробчатые диаграммы суммарной массы поставок',
x = 'Страны', y = 'Масса')
dev.off()
ggplot(data = new.df, aes(x = C_Year, y = Netweight..kg..mean, group = C_Year, color = C_Year)) +
geom_boxplot() +
scale_color_manual(values = c('red', 'blue', 'green'),
name = "Группы стран-поставщиков:") +
labs(title = 'Коробчатые диаграммы суммарной массы поставок',
x = 'Страны', y = 'Масса')
data <- read.csv('./data/DF_movies.csv', header = T, sep = ',')
data
knitr::opts_chunk$set(echo = TRUE)
library('ggplot2')
library('rjson')
library('dplyr')
library('lattice')
library('stringr')
library('gridExtra')
library('data.table')
data <- read.csv('./data/DF_movies.csv', header = T, sep = ',')
data
countries <- array()
for (county in strsplit(as.character(data$Country), ", ")){
countries <- append(countries, county[1])
}
png('lattice.png', width=1000, height=1000)
xyplot(Metascore ~ Release, data = data, auto.key = list(space = 'right'),
groups = countries,
ylab = 'Рейтинг фильма',
xlab = 'Дата выхода фильма',
main = 'График разброса рейтинга от даты выхода фильма')
dev.off()
fileURL <-"http://comtrade.un.org/data/cache/partnerAreas.json"
reporters <- fromJSON(file =fileURL)
reporters <- fromJSON(file =fileURL)
is.list(reporters)
reporters <-t(sapply(reporters$results, rbind))
reporters <-t(sapply(reporters$results, rbind))
dim(reporters)
reporters <-as.data.frame(reporters)
head(reporters)
names(reporters) <-c('State.Code', 'State.Name.En')
names(reporters) <- c('State.Code', 'State.Name.En')
fileURL <-"http://comtrade.un.org/data/cache/partnerAreas.json"
reporters <- fromJSON(file =fileURL)
is.list(reporters)
reporters <-t(sapply(reporters$results, rbind))
dim(reporters)
reporters <-as.data.frame(reporters)
head(reporters)
names(reporters) <- c('State.Code', 'State.Name.En')
reporters[reporters$State.Name.En =='Russian Federation', ]
source("https://raw.githubusercontent.com/aksyuk/R-data/master/API/comtrade_API.R")
for(i in 2010:2020) {
Sys.sleep(5)
s <-get.Comtrade(r = 'all', p = "643", ps = as.character(i), freq = "M",rg = '1', cc = '0207', fmt= "csv")
file.name <-paste('./data/comtrade_', i, '.csv', sep ='')
write.csv(s$data, file.name, row.names =F)
}
df <- read.csv('./data/comtrade_2010.csv', header = TRUE, sep = ',')
for (i in 2011:2020){
# Считываем данные из .csv файла
df.temp <- read.csv(paste('./data/comtrade_', i, '.csv', sep=''), header = T, sep=',')
# Заполняем основной дата фрейм
df <- rbind(df, df.temp)
}
df <- df[, c(2, 4, 10, 30, 32)]
df_test <- df
df <- data.table(df)
df <- df[, Netweight..kg. := as.double(Netweight..kg.)]
df[, round(mean(.SD$Netweight..kg., na.rm = T), 0), by = Year]
df[, Reporter, Year]
df_test[, "Partner"]
df[, Netweight..kg..mean := round(mean(.SD$Netweight..kg., na.rm = T), 0), by = Year]
df[, Reporter, Year]
df[, Netweight..kg..mean := round(mean(.SD$Netweight..kg., na.rm = T), 0), by = Year]
df[!is.na(Netweight..kg.), Netweight..kg..mean := Netweight..kg.]
df[is.na(Netweight..kg.), Year, Netweight..kg..mean]
new.df <- data.frame()
new.df <- rbind(new.df, cbind(df[(df$Year < 2014) | (df$Year > 2014), ], C_Year = '!2014'))
new.df <- rbind(new.df, cbind(df[df$Year == 2014, ], C_Year = '==2014'))
dim(new.df)
new.df
png('ggplot.png', width = 1000, height= 1000)
ggplot(data = new.df, aes(x = C_Year, y = Netweight..kg..mean, group = C_Year, color = C_Year)) +
geom_boxplot() +
scale_color_manual(values = c('red', 'blue', 'green'),
name = "Группы стран-поставщиков:") +
labs(title = 'Коробчатые диаграммы суммарной массы поставок',
x = 'Страны', y = 'Масса')
dev.off()
```{r, echo=TRUE}
library('ggplot2')
library('rjson')
library('dplyr')
library('lattice')
library('stringr')
library('gridExtra')
library('data.table')
data <- read.csv('./data/DF_movies.csv', header = T, sep = ',')
data
countries <- array()
for (county in strsplit(as.character(data$Country), ", ")){
countries <- append(countries, county[1])
}
png('lattice.png', width=1000, height=1000)
xyplot(Metascore ~ Release, data = data, auto.key = list(space = 'right'),
groups = countries,
ylab = 'Рейтинг фильма',
xlab = 'Дата выхода фильма',
main = 'График разброса рейтинга от даты выхода фильма')
dev.off()
fileURL <-"http://comtrade.un.org/data/cache/partnerAreas.json"
df <- read.csv('./data/comtrade_2010.csv', header = TRUE, sep = ',')
for (i in 2011:2020){
# Считываем данные из .csv файла
df.temp <- read.csv(paste('./data/comtrade_', i, '.csv', sep=''), header = T, sep=',')
# Заполняем основной дата фрейм
df <- rbind(df, df.temp)
}
unique(df$Reporter)
unique(df$Reporter)
df <- df[, c(2, 4, 10, 30, 32)]
df <- data.table(df)
df <- df[, Netweight..kg. := as.double(Netweight..kg.)]
df[, round(mean(.SD$Netweight..kg., na.rm = T), 0), by = Year]
df[, Reporter, Year]
df[df$Year == 2014]
df[, Netweight..kg..mean := round(mean(.SD$Netweight..kg., na.rm = T), 0), by = Year]
df[!is.na(Netweight..kg.), Netweight..kg..mean := Netweight..kg.]
df[is.na(Netweight..kg.), Year, Netweight..kg..mean]
unique(df$Reporter)
df$Reporter[]
new.df <- data.frame()
new.df <- rbind(new.df, cbind(df[((df$Reporter == 'Belgium') |
(df$Reporter == 'Ukraine') |
(df$Reporter == 'Estonia') |
(df$Reporter == 'Estonia') |
(df$Reporter == 'Germany') |
(df$Reporter == 'Finland') |
(df$Reporter == 'Netherlands') |
(df$Reporter == 'Hungary')), ], C_Year = 'Страны и эмбарго в 2014'))
new.df <- rbind(new.df, cbind(df[(df$Reporter != 'Belgium') &
(df$Reporter != 'Ukraine') &
(df$Reporter != 'Estonia') &
(df$Reporter != 'Estonia') &
(df$Reporter != 'Finland') &
(df$Reporter != 'Germany') &
(df$Reporter != 'Netherlands') &
(df$Reporter != 'Hungary'), ],
C_Year = 'Остальные страны'))
df
new.df
png('ggplot1.png', width = 1000, height= 1000)
ggplot(data = new.df, aes(x = Year, y = Netweight..kg..mean, group = C_Year, color = C_Year), width = 1000, height= 1000) +
geom_boxplot() +
scale_color_manual(values = c('red', 'blue', 'green'),
name = "Группы стран-поставщиков:") +
labs(title = 'Коробчатые диаграммы суммарной массы поставок',
x = 'Страны', y = 'Масса') +  + xlim(0, 20000) + ylim(0, 20000)
ggplot(data = new.df, aes(x = Year, y = Netweight..kg..mean, group = C_Year, color = C_Year), width = 1000, height= 1000) +
geom_boxplot() +
scale_color_manual(values = c('red', 'blue', 'green'),
name = "Группы стран-поставщиков:") +
labs(title = 'Коробчатые диаграммы суммарной массы поставок',
x = 'Страны', y = 'Масса') + xlim(0, 20000) + ylim(0, 20000)
png('ggplot1.png', width = 1000, height= 1000)
ggplot(data = new.df, aes(x = Year, y = Netweight..kg..mean, group = C_Year, color = C_Year), width = 1000, height= 1000) +
geom_boxplot() +
scale_color_manual(values = c('red', 'blue', 'green'),
name = "Группы стран-поставщиков:") +
labs(title = 'Коробчатые диаграммы суммарной массы поставок',
x = 'Страны', y = 'Масса') + xlim(0, 20000) + ylim(0, 20000)
png('ggplot1.png', width = 1000, height= 1000)
ggplot(data = new.df, aes(x = Year, y = Netweight..kg..mean, group = C_Year, color = C_Year), width = 1000, height= 1000) +
geom_boxplot() +
scale_color_manual(values = c('red', 'blue', 'green'),
name = "Группы стран-поставщиков:") +
labs(title = 'Коробчатые диаграммы суммарной массы поставок',
x = 'Страны', y = 'Масса') + ylim(0, 20000)
dev.off()
